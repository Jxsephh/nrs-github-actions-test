name: Create Release
on:
  # push:
  release:
    types: [published]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  fetch-release-details:
      name: Fetch release details
      runs-on: ubuntu-latest
      steps:
        - run: |
            echo "RELEASE_TITLE="${{ github.event.release.name }} >> $GITHUB_ENV
            
            export RELEASE_BODY="${{ github.event.release.body }}"
            RELEASE_BODY="${RELEASE_BODY//'%'/'%25'}"
            RELEASE_BODY="${RELEASE_BODY//$'\n'/'%0A'}"
            RELEASE_BODY="${RELEASE_BODY//$'\r'/'%0D'}"
            echo "RELEASE_BODY="${RELEASE_BODY} >> $GITHUB_ENV
            
            echo "RELEASE_TAG="${{ github.event.release.tag_name }} >> $GITHUB_ENV
            
  update-dependencies:
    name: Update dependency versions and create release PR
    runs-on: ubuntu-latest
    needs: fetch-release-details
    steps:
      - name: Checkout scripts
        uses: actions/checkout@v3 
        with:
          path: main
          ref: master

      - name: Checkout other repo
        uses: actions/checkout@v3
        with:
          repository: Jxsephh/github-actions-test
          path: github-actions-test
          ref: develop
          fetch-depth: '0'

      - name: Check for changes in repo
        run: |
          echo "UPGRADE_SOAPLIB="$(./main/.github/scripts/check-changes-across-branches.sh github-actions-test develop origin/master) >> $GITHUB_ENV
          echo "UNCOMMITTED_CHANGES="false >> $GITHUB_ENV
        shell: bash

      - name: Update pom.xml
        if: ${{ env.UPGRADE_SOAPLIB }} == true
        run: |
          echo ${{ env.RELEASE_BODY }}
          cd main
          ls -al
          git checkout origin/develop
          echo $(mvn help:evaluate -Dexpression=soapLib.version -q -DforceStdout)
          mvn versions:set-property -Dproperty=soapLib.version -DgenerateBackupPoms=false -DnewVersion=55 -q -DforceStdout
          echo $(mvn help:evaluate -Dexpression=soapLib.version -q -DforceStdout)
          echo "UNCOMMITTED_CHANGES="true >> $GITHUB_ENV

      - name: Create pull request and commit updates
        id: cpr
        uses: peter-evans/create-pull-request@v4.1.1
        with:
          base: master
          branch: release/canyonlands
          path: main
          reviewers: Jxsephh

      - name: Merge develop -> release branch
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: develop
          target_branch: release/canyonlands #${{steps.get_release.outputs.tag_name}}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: Jxsephh/github-actions-test
          event-type: my-event
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
      
      # - name: Commit updates in local repository
      #   uses: stefanzweifel/git-auto-commit-action@v4.14.1
      #   with:
      #     branch: release/canyonlands
      #     commit_message: "Merging develop into release branch"
      #     repository: main


      # - name: Update SOAPLIB pom.xml
      #   if: ${{ env.UPGRADE_SOAPLIB }} == true
      #   run: |
      #     cd github-actions-test
      #     touch idk.xml
      #     git add .
      #     ls -al

      # - name: Commit updates to SOAPLIB
      #   if: ${{ env.UPGRADE_SOAPLIB }} == true
      #   uses: stefanzweifel/git-auto-commit-action@v4.14.1
      #   with:
      #     branch: develop
      #     commit_message: "Testing pushing from another repo"
      #     repository: github-actions-test

      # - name: Commit updates in local repository
      #   if: ${{ env.UNCOMMITTED_CHANGES }} == true
      #   uses: stefanzweifel/git-auto-commit-action@v4.14.1
      #   with:
      #     branch: release/canyonlands
      #     commit_message: "Updating things"
      #     repository: main

      # - name: Checkout release branch
      #   uses: actions/checkout@v3 
      #   with:
      #     path: release
      #     ref: release/canyonlands

      # - name: Check outputs
      #   if: ${{ steps.cpr.outputs.pull-request-number }}
      #   run: |
      #     echo "Pull request number - ${{ steps.cpr.outputs.pull-request-number }}"
      #     echo "Pull request URL - ${{ steps.cpr.outputs.pull-request-url }}"
  # create-release-pr:
  #   name: Create release branch and pull request
  #   needs: [update-dependencies]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         ref: develop

  #     - name: Create pull request
  #       id: cpr
  #       uses: peter-evans/create-pull-request@v4.1.1
  #       with:
  #         base: master
  #         branch: release/canyonlands
  #         reviewers: Jxsephh
      
  #     - name: Check outputs
  #       if: ${{ steps.cpr.outputs.pull-request-number }}
  #       run: |
  #         echo "Pull request number - ${{ steps.cpr.outputs.pull-request-number }}"
  #         echo "Pull request URL - ${{ steps.cpr.outputs.pull-request-url }}"
    







      ## WIP ##
      # - name: Get release information
      #   id: get_release
      #   uses: cardinalby/git-get-release-action@1.2.2
      #   with:
      #     latest: true

      # - name: Create release branch
      #   id: create_release
      #   uses: peterjgrainger/action-create-branch@v2.2.0
      #   with:
      #     branch: 'release/${{steps.get_release.outputs.tag_name}}'

      # - name: Increment POM versions
      # Need to figure out how to determine which versions need incrementing

    #   - name: Merge develop -> release branch
    #     uses: devmasx/merge-branch@master
    #     with:
    #       label_name: 'Merging develop into release branch'
    #       from_branch: develop
    #       target_branch: release/${{steps.get_release.outputs.tag_name}}
    #       github_token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Checkout
      #   uses: actions/checkout@v3
      #   with:
      #     path: main