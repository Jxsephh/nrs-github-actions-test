name: Create release
on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release branch name'
        required: true
      nrs_version:
        description: 'New version of NRS'
        required: true
      soaplib_version:
        description: 'New version of SOAPLIB'
        required: false
      restlib_version:
        description: 'New version of RESTLIB'
        required: false
      pr_title:
        description: 'Pull request title'
        required: true
      pr_body:
        description: 'Pull request description'
        required: false
env: 
  FOO: "HI"
jobs:           
  update-dependencies:
    name: Update dependency versions and create release PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 
        with:
          path: main
          ref: master

      - name: Checkout SOAPLIB code
        uses: actions/checkout@v3
        with:
          repository: Jxsephh/github-actions-test
          path: github-actions-test
          ref: develop
          fetch-depth: '0'

      # - name: Check for changes in SOAPLIB
      #   run: |
      #     echo "UPGRADE_SOAPLIB="$(./.github/scripts/check-changes-across-branches.sh github-actions-test develop origin/master) >> $GITHUB_ENV
      #   shell: bash

      - name: Update dependency versions in pom.xml
        # if: ${{ env.UPGRADE_SOAPLIB }} == true
        run: |
          cd main
          mvn versions:set -DgenerateBackupPoms=false -DnewVersion=${{ inputs.nrs_version }} -q -DforceStdout
          echo "$FOO"
          echo "BODY_RELATED_VERSIONS=nrs ${{ inputs.nrs_version }}" >> $GITHUB_ENV
          echo "BODY RELATED VERSIONS TEXT =" $BODY_RELATED_VERSIONS

          if [ ! -z ${{ inputs.soaplib_version }} ] ; then
            echo "Updating SOAPLIB version"
            mvn versions:set-property -Dproperty=soapLib.version -DgenerateBackupPoms=false -DnewVersion=${{ inputs.soaplib_version }} -q -DforceStdout
          fi

          if [ ! -z ${{ inputs.restlib_version}} ] ; then
            echo "Updating RESTLIB version"
            mvn versions:set-property -Dproperty=restLib.version -DgenerateBackupPoms=false -DnewVersion=${{ inputs.restlib_version }} -q -DforceStdout
          fi

      - name: Create pull request and commit updates
        id: cpr
        uses: peter-evans/create-pull-request@v4.1.1
        with:
          base: master
          branch: ${{ inputs.release_name }}
          commit-message: "Updating dependency versions"
          draft: true
          path: main
          reviewers: Jxsephh
          title: ${{ inputs.pr_title }}
          body: |
            ### Included stories:
            -**US.....:**
            ---
            ### Related versions:
            [nrs ${{ github.events.inputs.release_name }}](https://github.com/AAInternal/nrs/pull/)
            ${{ inputs.pr_body }}

      - name: Merge develop into release branch
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: develop
          target_branch: ${{ inputs.release_name }} #${{steps.get_release.outputs.tag_name}}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: SOAPLIB Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        if: ${{ inputs.soaplib_version }} != ''
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: Jxsephh/github-actions-test
          event-type: update
          client-payload: '{"soaplib_version": "${{ inputs.soaplib_version }}"}'

      - name: RESTLIB Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        if: ${{ inputs.restlib_version }} != ''
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: Jxsephh/github-actions-test
          event-type: update
          client-payload: '{"restlib_version": "${{ inputs.restlib_version }}"}'
      
      - name: Generate Build Summary
        run: |
          echo '### Release PR Created!' >> $GITHUB_STEP_SUMMARY
          echo '**Pull Request URL:** [${{ steps.cpr.outputs.pull-request-url }}](${{ steps.cpr.outputs.pull-request-url }})' >> $GITHUB_STEP_SUMMARY
    
  # update-snapshot:
  #   name: Update snapshot version in develop
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         ref: develop
      
  #     - name: Update NRS version in pom.xml
  #       run:
  #         mvn versions:set-property -Dproperty=soapLib.version -DgenerateBackupPoms=false -DnewVersion=${{ inputs.soaplib_version }} -q -DforceStdout

      
      # - name: Commit updates in local repository
      #   uses: stefanzweifel/git-auto-commit-action@v4.14.1
      #   with:
      #     branch: release/canyonlands
      #     commit_message: "Merging develop into release branch"
      #     repository: main


      # - name: Update SOAPLIB pom.xml
      #   if: ${{ env.UPGRADE_SOAPLIB }} == true
      #   run: |
      #     cd github-actions-test
      #     touch idk.xml
      #     git add .
      #     ls -al

      # - name: Commit updates to SOAPLIB
      #   if: ${{ env.UPGRADE_SOAPLIB }} == true
      #   uses: stefanzweifel/git-auto-commit-action@v4.14.1
      #   with:
      #     branch: develop
      #     commit_message: "Testing pushing from another repo"
      #     repository: github-actions-test

      # - name: Commit updates in local repository
      #   if: ${{ env.UNCOMMITTED_CHANGES }} == true
      #   uses: stefanzweifel/git-auto-commit-action@v4.14.1
      #   with:
      #     branch: release/canyonlands
      #     commit_message: "Updating things"
      #     repository: main

      # - name: Checkout release branch
      #   uses: actions/checkout@v3 
      #   with:
      #     path: release
      #     ref: release/canyonlands

      # - name: Check outputs
      #   if: ${{ steps.cpr.outputs.pull-request-number }}
      #   run: |
      #     echo "Pull request number - ${{ steps.cpr.outputs.pull-request-number }}"
      #     echo "Pull request URL - ${{ steps.cpr.outputs.pull-request-url }}"
  # create-release-pr:
  #   name: Create release branch and pull request
  #   needs: [update-dependencies]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         ref: develop


      ## WIP ##
      # - name: Get release information
      #   id: get_release
      #   uses: cardinalby/git-get-release-action@1.2.2
      #   with:
      #     latest: true

      # - name: Create release branch
      #   id: create_release
      #   uses: peterjgrainger/action-create-branch@v2.2.0
      #   with:
      #     branch: 'release/${{steps.get_release.outputs.tag_name}}'

      # - name: Increment POM versions
      # Need to figure out how to determine which versions need incrementing

    #   - name: Merge develop -> release branch
    #     uses: devmasx/merge-branch@master
    #     with:
    #       label_name: 'Merging develop into release branch'
    #       from_branch: develop
    #       target_branch: release/${{steps.get_release.outputs.tag_name}}
    #       github_token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Checkout
      #   uses: actions/checkout@v3
      #   with:
      #     path: main
#